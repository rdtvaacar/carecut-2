{"version":3,"sources":["pages/Select.js","apis.js","ChartView.js","App.js","serviceWorker.js","index.js"],"names":["Select","_ref","datas","handleChange","id","engine","react_default","a","createElement","className","onChange","value","map","data","key","var_title","int_hp","e","Fragment","langCode","navigator","language","userLanguage","split","apiKey","document","querySelector","getAttribute","instance","axios","create","baseURL","concat","params","ChartView","stages","ft_type","rpmList","length","parent","rpm_values","int_fuel_type","hp","nm","rpmData","stageValue","rpmStage","s_ecod","sd_1","sd_2","sd_3","sd_4","sd_5","s_econ","sn_1","sn_2","sn_3","sn_4","sn_5","rpml","stage","stage_type","push","int_nm_new","int_hp_new","ECO_HP","S_1_HP","S_2_HP","S_3_HP","S_4_HP","S_5_HP","ECO_NM","S_1_NM","S_2_NM","S_3_NM","S_4_NM","S_5_NM","rpm","flat","filter","x","i","indexOf","dv","DataSet","createView","source","transform","type","fields","BizCharts","height","scale","range","forceFit","name","label","formatter","val","crosshairs","position","size","color","shape","style","stroke","lineWidth","App","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","brands","setBrands","_useState5","_useState6","models","setModels","_useState7","_useState8","years","setYears","_useState9","_useState10","engines","setEngines","_useState11","_useState12","setStages","_useState13","window","location","hash","_useState14","url","setUrl","_useState15","_useState16","title","setTitle","_useState17","_useState18","setBrand","_useState19","_useState20","setModel","_useState21","_useState22","setYear","_useState23","_useState24","setEngine","_useState25","_useState26","setStage","_useState27","undefined","_useState28","brandId","setBrandId","_useState29","_useState30","modelId","setModelId","_useState31","_useState32","yearId","setYearId","_useState33","_useState34","engineId","setEngineId","_useState35","_useState36","stageId","setStageId","idSelector","str","useEffect","get","then","res","urlExp","urlCount","replace","getModelFunc","getYearFunc","getEngineFunc","getStageFunc","urlConf","arguments","brandData","find","seo_url","modelData","seo_title","yearData","engineData","Logo","logo","width","src","NmStage","_ref2","int_nm_diff","EcoStage","_ref3","int_eco","int_hp_diff","pages_Select","event","target","marginTop","var_logo_big","int_hp_org","int_nm_org","src_ChartView","Boolean","hostname","match","WebFont","load","google","families","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2284cd33.chunk.js","sourcesContent":["import React, {useEffect} from 'react';\r\n\r\nconst Select = ({datas, handleChange, id, engine}) => {\r\n    const Option = () => {\r\n\r\n        try {\r\n            if (engine === 1) {\r\n                return datas.map((data) => (\r\n                    <option key={data.id} value={data.id}>{data.var_title + ' ' + data.int_hp}Hp</option>\r\n                ));\r\n            } else {\r\n                return datas.map((data) => (\r\n                    <option key={data.id} value={data.id}>{data.var_title}</option>\r\n                ));\r\n            }\r\n        } catch (e) {\r\n            return <></>\r\n        }\r\n    }\r\n    return (\r\n        <select className={'acr-select'} onChange={handleChange} value={id}>\r\n            <option value={''}>Select</option>\r\n            <Option/>\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default Select;","import axios from 'axios';\r\n\r\nconst userLang = navigator.language || navigator.userLanguage;\r\nconst langCode = userLang.split('-');\r\nconst apiKey = document.querySelector(\"meta[name='cst-api-key']\").getAttribute('content');\r\nconst instance = axios.create({\r\n    baseURL: `https://api.carecusoft.com/${langCode[0]}/v1/`,\r\n    params: {\r\n        key: apiKey\r\n    }\r\n});\r\nexport default instance","import React from \"react\";\r\nimport {Chart, Axis, Geom, Tooltip, Legend} from \"bizcharts\";\r\nimport DataSet from '@antv/data-set';\r\n\r\nconst ChartView = ({stages}) => {\r\n    let ft_type = 'petrol';\r\n    let rpmList = [\"0\", \"1000\", \"2000\", \"3000\", \"4000\", \"5000\", \"6000\", \"7000\", \"8000\"];\r\n    if (stages.length > 0) {\r\n        try {\r\n            if (stages[0].parent.rpm_values) {\r\n            } else {\r\n                switch (stages[0].parent.int_fuel_type) {\r\n                    case 0:\r\n                        rpmList = [\"0\", \"1000\", \"2000\", \"3000\", \"4000\", \"5000\", \"6000\", \"7000\", \"8000\"];\r\n                        ft_type = {hp: [0, 7, 25, 43, 57, 73, 90, 100, 0], nm: [0, 46, 79, 91, 91, 95, 100, 90, 0]}\r\n                        break\r\n                    case 1:\r\n                        ft_type = {hp: [0, 7, 25, 43, 57, 73, 90, 100, 0], nm: [0, 46, 79, 91, 91, 95, 100, 90, 0]}\r\n                        rpmList = [\"0\", \"1000\", \"2000\", \"3000\", \"4000\", \"5000\", \"6000\", \"7000\", \"8000\"];\r\n                        break\r\n                    case 2:\r\n                        ft_type = {hp: [0, 16, 45, 63, 80, 90, 97, 100, 90, 0], nm: [0, 50, 90, 99, 100, 95, 85, 79, 67, 0]}\r\n                        rpmList = [\"0\", \"1000\", \"1500\", \"2000\", \"2500\", \"3000\", \"3500\", \"4000\", \"4500\", \"5000\"];\r\n                        break\r\n                }\r\n            }\r\n\r\n            let rpmData = [];\r\n            let stageValue = []\r\n            let rpmStage = [];\r\n            let s_ecod = []\r\n            let sd_1 = []\r\n            let sd_2 = []\r\n            let sd_3 = []\r\n            let sd_4 = []\r\n            let sd_5 = []\r\n            let s_econ = []\r\n            let sn_1 = []\r\n            let sn_2 = []\r\n            let sn_3 = []\r\n            let sn_4 = []\r\n            let sn_5 = []\r\n            rpmList.map((rpml, key) => {\r\n                stages.map((stage) => {\r\n                    switch (stage.stage_type) {\r\n                        case 0:\r\n                            stageValue.push([\r\n                                'ECO_HP', 'ECO_NM'\r\n                            ])\r\n                            s_ecod.push(ft_type.hp[key] * stage.parent.int_hp / 100)\r\n                            s_econ.push(ft_type.nm[key] * stage.int_nm_new / 100)\r\n                            break\r\n                        case 1:\r\n                            stageValue.push([\r\n                                'S_1_HP', 'S_1_NM'\r\n                            ])\r\n                            sd_1.push(ft_type.hp[key] * stage.int_hp_new / 100)\r\n                            sn_1.push(ft_type.nm[key] * stage.int_nm_new / 100)\r\n                            break\r\n                        case 2:\r\n                            stageValue.push([\r\n                                'S_2_HP', 'S_2_NM'\r\n                            ])\r\n                            sd_2.push(ft_type.hp[key] * stage.int_hp_new / 100)\r\n                            sn_2.push(ft_type.nm[key] * stage.int_nm_new / 100)\r\n                            break\r\n                        case 3:\r\n                            stageValue.push([\r\n                                'S_3_HP', 'S_3_NM'\r\n                            ])\r\n                            sd_3.push(ft_type.hp[key] * stage.int_hp_new / 100)\r\n                            sn_3.push(ft_type.nm[key] * stage.int_nm_new / 100)\r\n                            break\r\n                        case 4:\r\n                            stageValue.push([\r\n                                'S_4_HP', 'S_4_NM'\r\n                            ])\r\n                            sd_4.push(ft_type.hp[key] * stage.int_hp_new / 100)\r\n                            sn_4.push(ft_type.nm[key] * stage.int_nm_new / 100)\r\n                            break\r\n                        case 5:\r\n                            stageValue.push([\r\n                                'S_5_HP', 'S_5_NM'\r\n                            ])\r\n                            sd_5.push(ft_type.hp[key] * stage.int_hp_new / 100)\r\n                            sn_5.push(ft_type.nm[key] * stage.int_nm_new / 100)\r\n                            break\r\n                    }\r\n                })\r\n                rpmStage = {\r\n                    ECO_HP: s_ecod[key],\r\n                    S_1_HP: sd_1[key],\r\n                    S_2_HP: sd_2[key],\r\n                    S_3_HP: sd_3[key],\r\n                    S_4_HP: sd_4[key],\r\n                    S_5_HP: sd_5[key],\r\n                    ECO_NM: s_econ[key],\r\n                    S_1_NM: sn_1[key],\r\n                    S_2_NM: sn_2[key],\r\n                    S_3_NM: sn_3[key],\r\n                    S_4_NM: sn_4[key],\r\n                    S_5_NM: sn_5[key]\r\n                }\r\n                rpmData.push({\r\n                        rpm: rpml,\r\n                        ECO_HP: rpmStage.ECO_HP,\r\n                        ECO_NM: rpmStage.ECO_NM,\r\n                        S_1_HP: rpmStage.S_1_HP,\r\n                        S_1_NM: rpmStage.S_1_NM,\r\n                        S_2_HP: rpmStage.S_2_HP,\r\n                        S_2_NM: rpmStage.S_2_NM,\r\n                        S_3_HP: rpmStage.S_3_HP,\r\n                        S_3_NM: rpmStage.S_3_NM,\r\n                        S_4_HP: rpmStage.S_4_HP,\r\n                        S_4_NM: rpmStage.S_4_NM,\r\n                        S_5_HP: rpmStage.S_5_HP,\r\n                        S_5_NM: rpmStage.S_5_NM,\r\n\r\n                    }\r\n                )\r\n            })\r\n            stageValue = stageValue.flat()\r\n            stageValue = stageValue.filter((x, i, a) => a.indexOf(x) == i)\r\n            const ds = new DataSet();\r\n            const dv = ds.createView().source(rpmData);\r\n            dv.transform({\r\n                type: 'fold',\r\n                fields: stageValue, // 展开字段集\r\n                key: 'city', // key字段\r\n                value: 'hp', // value字段\r\n            });\r\n            const cols = {\r\n                rpm: {\r\n                    range: [0, 1]\r\n                }\r\n            }\r\n            return (\r\n                <Chart height={400} data={dv} scale={cols} forceFit>\r\n                    <Legend/>\r\n                    <Axis name=\"rpm\"/>\r\n                    <Axis name=\"hp\" label={{formatter: val => `${val}hp`}}/>\r\n                    <Tooltip crosshairs={{type: \"y\"}}/>\r\n                    <Geom type=\"line\" position=\"rpm*hp\" size={2} color={'city'}/>\r\n                    <Geom type='point' position=\"rpm*hp\" size={4} shape={'circle'} color={'city'} style={{stroke: '#fff', lineWidth: 1}}/>\r\n\r\n                </Chart>\r\n            )\r\n        } catch (e) {\r\n\r\n            return <></>\r\n        }\r\n    } else {\r\n        return <></>\r\n    }\r\n\r\n}\r\n\r\nexport default ChartView;\r\n","import React, {useEffect, useState} from 'react';\nimport Select from './pages/Select';\nimport instance from './apis';\nimport ChartView from './ChartView';\n\n\nconst App = () => {\n    const [status, setStatus] = useState(false);\n    const [brands, setBrands] = useState([]);\n    const [models, setModels] = useState([]);\n    const [years, setYears] = useState([]);\n    const [engines, setEngines] = useState([]);\n    const [stages, setStages] = useState([]);\n    const [url, setUrl] = useState(window.location.hash)\n    const [title, setTitle] = useState('Chip Tuning')\n\n    const [brand, setBrand] = useState([]);\n    const [model, setModel] = useState([]);\n    const [year, setYear] = useState([]);\n    const [engine, setEngine] = useState([]);\n    const [stage, setStage] = useState([]);\n\n    const [brandId, setBrandId] = useState(undefined);\n    const [modelId, setModelId] = useState(undefined);\n    const [yearId, setYearId] = useState(undefined);\n    const [engineId, setEngineId] = useState(undefined);\n    const [stageId, setStageId] = useState(undefined);\n\n    function idSelector(str) {\n        return str.split(\"-\")[0]\n    }\n\n    window.location.hash = url;\n    document.title = title;\n    useEffect(() => {\n        instance\n            .get('/chiptuning')\n            .then(function (res) {\n                setBrands(res.data)\n            })\n\n    }, [])\n    useEffect(() => {\n        if (url) {\n            const urlExp = url.split(\"/\")\n            const urlCount = urlExp.length\n            if (urlCount == 1 && brands.length < 1) {\n                const id = idSelector(urlExp[0]).replace('#', '')\n                getModelFunc(id)\n            } else if (urlCount == 2 && models.length < 1) {\n                getModelFunc(idSelector(urlExp[0]).replace('#', ''))\n                getYearFunc(idSelector(urlExp[1]))\n            } else if ((urlCount == 3 && years.length < 1)) {\n                getModelFunc(idSelector(urlExp[0]).replace('#', ''))\n                getYearFunc(idSelector(urlExp[1]))\n                getEngineFunc(idSelector(urlExp[2]))\n            } else if ((urlCount == 4 && engines.length < 1)) {\n                getModelFunc(idSelector(urlExp[0]).replace('#', ''))\n                getYearFunc(idSelector(urlExp[1]))\n                getEngineFunc(idSelector(urlExp[2]))\n                getStageFunc(idSelector(urlExp[3]))\n            }\n        }\n    }, [brands])\n\n    const getModelFunc = (id, urlConf = false) => {\n        try {\n            const brandData = brands.find(data => data.id == id)\n            setBrand(brandData)\n            setBrandId(id)\n            setModelId(undefined)\n            setYearId(undefined)\n            setEngineId(undefined)\n            setStageId(undefined)\n            setModels([])\n            setYears([])\n            setEngines([])\n            setStages([])\n            instance\n                .get(`/tuning/models/${id}`)\n                .then(function (res) {\n                    setModels(res.data)\n                    setTitle(res.data[0].parent.var_title + \" | Chip Tuning\")\n                })\n                .then(\n                    function () {\n                        if (urlConf) {\n                            setUrl(brandData.seo_url)\n                        }\n\n                    }\n                )\n        } catch (e) {\n\n        }\n\n    }\n    const getYearFunc = (id, urlConf = false) => {\n        try {\n            const modelData = models.find(data => data.id == id)\n            setModel(modelData)\n            setModelId(id)\n            setYearId(undefined)\n            setEngineId(undefined)\n            setStageId(undefined)\n            setYears([])\n            setEngines([])\n            setStages([])\n            instance\n                .get(`/tuning/years/${id}`)\n                .then(function (res) {\n                    setYears(res.data)\n                    setTitle(res.data[0].parent.seo_title + \" | Chip Tuning\")\n\n                })\n                .then(\n                    function () {\n                        if (urlConf) {\n                            setUrl(modelData.seo_url)\n                        }\n\n                    })\n        } catch (e) {\n\n        }\n    }\n    const getEngineFunc = (id, urlConf = false) => {\n        try {\n            const yearData = years.find(data => data.id == id)\n            setYear(yearData)\n            setYearId(id)\n            setEngineId(undefined)\n            setStageId(undefined)\n            setEngines([])\n            setStages([])\n            instance\n                .get(`/tuning/engines/${id}`)\n                .then(function (res) {\n                    setEngines(res.data)\n                    setTitle(res.data[0].parent.seo_title + \" | Chip Tuning\")\n                }).then(\n                function () {\n                    if (urlConf) {\n                        setUrl(yearData.seo_url)\n                    }\n                })\n\n        } catch (e) {\n\n        }\n    }\n\n    function getStageFunc(id, urlConf = false) {\n        try {\n            const engineData = engines.find(data => data.id == id)\n            setEngine(engineData)\n            setEngineId(id)\n            setStageId(undefined)\n            setStages([])\n            instance\n                .get(`/tuning/stages/${id}`)\n                .then(function (res) {\n                        setStages(res.data);\n                        setTitle(res.data[0].parent.seo_title + \" | Chip Tuning\")\n                        if (res.data[1]) {\n                            setStage(res.data[1]);\n                            setStageId(res.data[1].id);\n                        } else {\n                            setStage(res.data[0]);\n                            setStageId(res.data[0].id);\n                        }\n                    }\n                ).then(\n                function () {\n                    if (urlConf) {\n                        setUrl(engineData.seo_url)\n                    }\n                })\n        } catch (e) {\n\n        }\n    }\n\n    const getModels = (event) => {\n        const id = event.target.value\n        getModelFunc(id, true)\n    }\n    const getYears = (event) => {\n        const id = event.target.value\n        getYearFunc(id, true)\n    }\n    const getEngines = (event) => {\n        const id = event.target.value\n        getEngineFunc(id, true)\n    }\n    const getStages = (event) => {\n        const id = event.target.value\n        getStageFunc(id, true)\n    }\n    const Logo = ({logo}) => {\n        return (\n            <img width={60} src={`https://api.carecusoft.com/userfiles/${logo}`}/>\n        )\n    }\n    const BrandInfo = () => {\n        if (stageId) {\n            return (\n                <div style={{height: 88}} className=\"acr-2 acr-border acr-radius acr-p-10 acr-m-10 cst-2-standart acr-shadow\">\n                    <div className=\"acr-s-div\">\n                        <div className=\"acr-s-1\">\n                            <Logo logo={stage.parent.parent.parent.parent.var_logo_big}/>\n                        </div>\n                        <div className=\"acr-s-3 acr-m-4\">\n                            <div className=\"acr-h18\">\n                                <b>Standart</b>\n                                <br/>\n                            </div>\n                            <div className=\"acr-s-div\">\n                                <div className=\"acr-s-1 acr-h16\">\n                                    <b>{stage.int_hp_org}</b> <span className=\"acr-h12\">hp</span>\n\n                                </div>\n                                <div className=\"acr-s-1 acr-h16\">\n                                    <b>{stage.int_nm_org}</b> <span className=\"acr-h12\">nm</span>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return <></>\n        }\n\n    }\n    const NmStage = ({data}) => {\n        return (\n            <div className=\"acr-s-1 acr-h16\">\n                <b>{data.int_nm_new}</b> <span className=\"acr-h14\">nm</span>\n                <div className=\"acr-both\"></div>\n                <span className=\"acr-h16 cst-2-diff\"><b>+{data.int_nm_diff}</b> <span className=\"acr-h12\">nm</span></span>\n            </div>\n        )\n    }\n    const EcoStage = ({data, key}) => {\n        if (data.stage_type == 0) {\n            return (\n                <div id={data.id} className={`acr-2 acr-border acr-radius acr-p-10 acr-m-10 cst-2-tuning-${data.stage_type} acr-shadow`}>\n                    <div className=\"acr-s-div\">\n                        <div className=\"acr-s-1 acr-m-4\">\n                            <div className=\"acr-h18\">\n                                <b>{data.var_title}</b>\n                            </div>\n                            <NmStage data={data}/>\n                        </div>\n                        <div className=\"acr-s-1 acr-h16\">\n                            <span style={{color: '#7FB800'}} className=\" cst-2-diff\"><b>-{data.int_eco}</b> <span className=\"acr-h12\">FUEL</span></span>\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div id={data.id} className={`acr-2 acr-border acr-radius acr-p-10 acr-m-10 cst-2-tuning-${data.stage_type} acr-shadow`}>\n                    <div className=\"acr-s-div\">\n                        <div className=\"acr-s-1 acr-m-4\">\n                            <div className=\"acr-h18\">\n                                <b>{data.var_title}</b>\n                                <br/>\n                            </div>\n                            <div className=\"acr-s-div\">\n                                <div className=\"acr-s-1 acr-h16\">\n                                    <b>{data.int_hp_new}</b> <span className=\"acr-h12\">hp</span>\n                                    <div className=\"acr-both\"></div>\n                                    <span className=\"cst-2-diff\"><b>+{data.int_hp_diff}</b> <span className=\"acr-h12\">hp</span></span>\n                                </div>\n                                <NmStage data={data}/>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            )\n\n        }\n\n    }\n    const StagesView = () => {\n        return stages.map((data) => (\n            <EcoStage data={data}/>\n        ))\n    }\n\n\n    return (\n        <div>\n            <div className=\"acr-div acr-shadow acr-p-10 acr-radius\">\n                <div className=\"acr-1 acr-m-10 \">\n                    Brands\n                    <Select datas={brands} id={brandId} handleChange={getModels}/>\n                </div>\n                <div className=\"acr-1  acr-m-10 \">\n                    Models\n                    <Select datas={models} id={modelId} handleChange={getYears}/>\n                </div>\n                <div className=\"acr-1  acr-m-10 \">\n                    Years\n                    <Select datas={years} id={yearId} handleChange={getEngines}/>\n                </div>\n                <div className=\"acr-1  acr-m-10 \">\n                    Engines\n                    <Select datas={engines} id={engineId} engine={1} handleChange={getStages}/>\n                </div>\n            </div>\n            <div className=\"acr-div \" style={{marginTop: 30}}>\n                <BrandInfo/>\n                <StagesView/>\n            </div>\n            <ChartView stages={stages}/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './acr.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n    google: {\n        families: ['Karla:300,400,700', 'sans-serif']\n    }\n});\nReactDOM.render(<App/>, document.getElementById('carecut-2'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}