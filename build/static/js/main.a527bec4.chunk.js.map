{"version":3,"sources":["pages/Select.js","apis.js","ChartView.js","App.js","serviceWorker.js","index.js"],"names":["Select","_ref","datas","handleChange","id","engine","react_default","a","createElement","className","onChange","value","map","data","key","my_data","name","hp","var_title","int_hp","e","Fragment","langCode","navigator","language","userLanguage","split","apiKey","document","querySelector","getAttribute","instance","axios","create","baseURL","concat","params","ChartView","stages","ft_type","rpmList","length","parent","rpm_values","hp_percentage","nm_percentage","rpmExp","ftHpExp","ftNmExp","nm","int_fuel_type","rpmData","stageValue","rpmStage","s_ecod","sd_1","sd_2","sd_3","sd_4","sd_5","s_econ","sn_1","sn_2","sn_3","sn_4","sn_5","rpml","stage","int_nm_new","int_hp_new","hp_org","hp_nm","int_nm","stage_type","push","HP","S_1_HP","S_2_HP","S_3_HP","S_4_HP","S_5_HP","NM","S_1_NM","S_2_NM","S_3_NM","S_4_NM","S_5_NM","rpm","flat","filter","x","i","indexOf","dv","DataSet","createView","source","transform","type","fields","BizCharts","height","scale","range","forceFit","label","formatter","val","crosshairs","position","size","color","shape","style","stroke","lineWidth","App","_useState","useState","_useState2","Object","slicedToArray","_useState3","currency","_useState4","config","setConfig","_useState5","_useState6","lang","setLang","_useState7","_useState8","brands","setBrands","_useState9","s0","s1","s2","s3","s4","s5","func","_useState10","priceSet","setPriceSet","_useState11","_useState12","hpSet","setHpSet","_useState13","_useState14","nmSet","setNmSet","_useState15","_useState16","models","setModels","_useState17","_useState18","years","setYears","_useState19","_useState20","engines","setEngines","_useState21","_useState22","setStages","_useState23","window","location","hash","_useState24","url","setUrl","_useState25","_useState26","title","setTitle","_useState27","_useState28","setBrand","_useState29","_useState30","setModel","_useState31","_useState32","setYear","_useState33","_useState34","setEngine","_useState35","_useState36","setStage","_useState37","undefined","_useState38","brandId","setBrandId","_useState39","_useState40","modelId","setModelId","_useState41","_useState42","yearId","setYearId","_useState43","_useState44","engineId","setEngineId","_useState45","_useState46","stageId","setStageId","idSelector","str","useEffect","get","then","res","urlExp","urlCount","replace","getModelFunc","getYearFunc","getEngineFunc","getStageFunc","urlConf","arguments","brandData","find","seo_url","modelData","seo_title","yearData","engineData","result","Logo","logo","width","src","dataFunc","rate","Number","NmStage","getData","nmPer","newNm","nmDiff","nm_diff","Stage","_ref2","pricePer","hpPer","newHp","newPrice","price","hpDiff","eco","int_eco","hp_diff","pages_Select","event","target","marginTop","brand","var_logo_big","src_ChartView","Boolean","hostname","match","WebFont","load","google","families","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a527bec4.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Select = ({datas, handleChange, id, engine}) => {\r\n    const Option = () => {\r\n\r\n        try {\r\n            if (engine === 1) {\r\n                return datas.map((data) => (\r\n                    <option key={data.id} value={data.id}>{data.my_data != null ? data.my_data.name + ' ' + data.my_data.hp : data.var_title + ' ' + data.int_hp}Hp</option>\r\n                ));\r\n            } else {\r\n                return datas.map((data) => (\r\n                    <option key={data.id} value={data.id}>{data.my_data != null ? data.my_data.name : data.var_title}</option>\r\n                ));\r\n            }\r\n        } catch (e) {\r\n            return <></>\r\n        }\r\n    }\r\n    return (\r\n        <select className={'acr-select'} onChange={handleChange} value={id}>\r\n            <option value={''}>Select</option>\r\n            <Option/>\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default Select;","import axios from 'axios';\r\n\r\nconst userLang = navigator.language || navigator.userLanguage;\r\nconst langCode = userLang.split('-');\r\nconst apiKey = document.querySelector(\"meta[name='cst-api-key']\").getAttribute('content');\r\nconst instance = axios.create({\r\n    baseURL: `https://api.carecusoft.com/${langCode[0]}/v1/`,\r\n    params: {\r\n        key: apiKey\r\n    }\r\n});\r\nexport default instance","import React from \"react\";\r\nimport {Chart, Axis, Geom, Tooltip, Legend} from \"bizcharts\";\r\nimport DataSet from '@antv/data-set';\r\n\r\nconst ChartView = ({stages}) => {\r\n    let ft_type = 'petrol';\r\n    let rpmList = [\"0\", \"1000\", \"2000\", \"3000\", \"4000\", \"5000\", \"6000\", \"7000\", \"8000\"];\r\n    if (stages.length > 0) {\r\n        try {\r\n            const engine = stages[0].parent;\r\n            if (engine.rpm_values) {\r\n                const hp_percentage = engine.my_data != null ? engine.my_data.hp_percentage : engine.hp_percentage\r\n                const nm_percentage = engine.my_data != null ? engine.my_data.nm_percentage : engine.nm_percentage\r\n                const rpmExp = engine.rpm_values.split(',')\r\n                const ftHpExp = hp_percentage.split(',')\r\n                const ftNmExp = nm_percentage.split(',')\r\n\r\n                rpmList = rpmExp;\r\n                ft_type = {hp: ftHpExp, nm: ftNmExp}\r\n            } else {\r\n                switch (engine.int_fuel_type) {\r\n                    case 0:\r\n                        rpmList = [\"0\", \"1000\", \"2000\", \"3000\", \"4000\", \"5000\", \"6000\", \"7000\", \"8000\"];\r\n                        ft_type = {hp: [0, 7, 25, 43, 57, 73, 90, 100, 0], nm: [0, 46, 79, 91, 91, 95, 100, 90, 0]}\r\n                        break\r\n                    case 1:\r\n                        ft_type = {hp: [0, 7, 25, 43, 57, 73, 90, 100, 0], nm: [0, 46, 79, 91, 91, 95, 100, 90, 0]}\r\n                        rpmList = [\"0\", \"1000\", \"2000\", \"3000\", \"4000\", \"5000\", \"6000\", \"7000\", \"8000\"];\r\n                        break\r\n                    case 2:\r\n                        ft_type = {hp: [0, 16, 45, 63, 80, 90, 97, 100, 90, 0], nm: [0, 50, 90, 99, 100, 95, 85, 79, 67, 0]}\r\n                        rpmList = [\"0\", \"1000\", \"1500\", \"2000\", \"2500\", \"3000\", \"3500\", \"4000\", \"4500\", \"5000\"];\r\n                        break\r\n                }\r\n            }\r\n\r\n            let rpmData = [];\r\n            let stageValue = []\r\n            let rpmStage = [];\r\n            let s_ecod = []\r\n            let sd_1 = []\r\n            let sd_2 = []\r\n            let sd_3 = []\r\n            let sd_4 = []\r\n            let sd_5 = []\r\n            let s_econ = []\r\n            let sn_1 = []\r\n            let sn_2 = []\r\n            let sn_3 = []\r\n            let sn_4 = []\r\n            let sn_5 = []\r\n\r\n            rpmList.map((rpml, key) => {\r\n                stages.map((stage) => {\r\n                    const nm = stage.my_data != null ? stage.my_data.nm : stage.int_nm_new;\r\n                    const hp = stage.my_data != null ? stage.my_data.hp : stage.int_hp_new;\r\n                    const hp_org = engine.my_data != null ? engine.my_data.hp : engine.int_hp;\r\n                    const hp_nm = engine.my_data != null ? engine.my_data.nm : engine.int_nm;\r\n\r\n                    switch (stage.stage_type) {\r\n                        case 0:\r\n                            stageValue.push([\r\n                                'HP', 'NM'\r\n                            ])\r\n                            s_ecod.push(ft_type.hp[key] * hp_org / 100)\r\n                            s_econ.push(ft_type.nm[key] * hp_nm / 100)\r\n\r\n                            break\r\n                        case 1:\r\n                            stageValue.push([\r\n                                'S_1_HP', 'S_1_NM'\r\n                            ])\r\n                            sd_1.push(ft_type.hp[key] * hp / 100)\r\n                            sn_1.push(ft_type.nm[key] * nm / 100)\r\n                            break\r\n                        case 2:\r\n                            stageValue.push([\r\n                                'S_2_HP', 'S_2_NM'\r\n                            ])\r\n                            sd_2.push(ft_type.hp[key] * hp / 100)\r\n                            sn_2.push(ft_type.nm[key] * nm / 100)\r\n                            break\r\n                        case 3:\r\n                            stageValue.push([\r\n                                'S_3_HP', 'S_3_NM'\r\n                            ])\r\n                            sd_3.push(ft_type.hp[key] * hp / 100)\r\n                            sn_3.push(ft_type.nm[key] * nm / 100)\r\n                            break\r\n                        case 4:\r\n                            stageValue.push([\r\n                                'S_4_HP', 'S_4_NM'\r\n                            ])\r\n                            sd_4.push(ft_type.hp[key] * hp / 100)\r\n                            sn_4.push(ft_type.nm[key] * nm / 100)\r\n                            break\r\n                        case 5:\r\n                            stageValue.push([\r\n                                'S_5_HP', 'S_5_NM'\r\n                            ])\r\n                            sd_5.push(ft_type.hp[key] * hp / 100)\r\n                            sn_5.push(ft_type.nm[key] * nm / 100)\r\n                            break\r\n                    }\r\n                })\r\n                rpmStage = {\r\n                    HP: s_ecod[key],\r\n                    S_1_HP: sd_1[key],\r\n                    S_2_HP: sd_2[key],\r\n                    S_3_HP: sd_3[key],\r\n                    S_4_HP: sd_4[key],\r\n                    S_5_HP: sd_5[key],\r\n                    NM: s_econ[key],\r\n                    S_1_NM: sn_1[key],\r\n                    S_2_NM: sn_2[key],\r\n                    S_3_NM: sn_3[key],\r\n                    S_4_NM: sn_4[key],\r\n                    S_5_NM: sn_5[key]\r\n                }\r\n                rpmData.push({\r\n                        rpm: rpml,\r\n                        HP: rpmStage.HP,\r\n                        NM: rpmStage.NM,\r\n                        S_1_HP: rpmStage.S_1_HP,\r\n                        S_1_NM: rpmStage.S_1_NM,\r\n                        S_2_HP: rpmStage.S_2_HP,\r\n                        S_2_NM: rpmStage.S_2_NM,\r\n                        S_3_HP: rpmStage.S_3_HP,\r\n                        S_3_NM: rpmStage.S_3_NM,\r\n                        S_4_HP: rpmStage.S_4_HP,\r\n                        S_4_NM: rpmStage.S_4_NM,\r\n                        S_5_HP: rpmStage.S_5_HP,\r\n                        S_5_NM: rpmStage.S_5_NM,\r\n\r\n                    }\r\n                )\r\n            })\r\n            stageValue = stageValue.flat()\r\n            stageValue = stageValue.filter((x, i, a) => a.indexOf(x) == i)\r\n            const ds = new DataSet();\r\n            const dv = ds.createView().source(rpmData);\r\n            dv.transform({\r\n                type: 'fold',\r\n                fields: stageValue, // 展开字段集\r\n                key: 'city', // key字段\r\n                value: 'hp', // value字段\r\n            });\r\n            const cols = {\r\n                rpm: {\r\n                    range: [0, 1]\r\n                }\r\n            }\r\n            return (\r\n                <Chart height={400} data={dv} scale={cols} forceFit>\r\n                    <Legend/>\r\n                    <Axis name=\"rpm\"/>\r\n                    <Axis name=\"hp\" label={{formatter: val => `${val}`}}/>\r\n                    <Tooltip crosshairs={{type: \"y\"}}/>\r\n                    <Geom type=\"line\" position=\"rpm*hp\" size={2} color={'city'}/>\r\n                    <Geom type='point' position=\"rpm*hp\" size={4} shape={'circle'} color={'city'} style={{stroke: '#fff', lineWidth: 1}}/>\r\n\r\n                </Chart>\r\n            )\r\n        } catch (e) {\r\n\r\n            return <></>\r\n        }\r\n    } else {\r\n        return <></>\r\n    }\r\n\r\n}\r\n\r\nexport default ChartView;\r\n","import React, {useEffect, useState} from 'react';\nimport Select from './pages/Select';\nimport instance from './apis';\nimport ChartView from './ChartView';\n\n\nconst App = () => {\n    const [status, setStatus] = useState(false);\n    const [config, setConfig] = useState({currency: \"€\"});\n    const [lang, setLang] = useState({});\n    const [brands, setBrands] = useState([]);\n    const [priceSet, setPriceSet] = useState({s0: 1, s1: 1, s2: 1, s3: 1, s4: 1, s5: 1, func: \"*\"});\n    const [hpSet, setHpSet] = useState({s0: 1, s1: 1, s2: 1, s3: 1, s4: 1, s5: 1, func: \"*\"});\n    const [nmSet, setNmSet] = useState({s0: 1, s1: 1, s2: 1, s3: 1, s4: 1, s5: 1, func: \"*\"});\n    const [models, setModels] = useState([]);\n    const [years, setYears] = useState([]);\n    const [engines, setEngines] = useState([]);\n    const [stages, setStages] = useState([]);\n    const [url, setUrl] = useState(window.location.hash)\n    const [title, setTitle] = useState('Chip Tuning')\n\n    const [brand, setBrand] = useState([]);\n    const [model, setModel] = useState([]);\n    const [year, setYear] = useState([]);\n    const [engine, setEngine] = useState([]);\n    const [stage, setStage] = useState([]);\n\n    const [brandId, setBrandId] = useState(undefined);\n    const [modelId, setModelId] = useState(undefined);\n    const [yearId, setYearId] = useState(undefined);\n    const [engineId, setEngineId] = useState(undefined);\n    const [stageId, setStageId] = useState(undefined);\n\n    function idSelector(str) {\n        return str.split(\"-\")[0]\n    }\n\n    window.location.hash = url;\n    document.title = title;\n    useEffect(() => {\n        instance\n            .get('/chiptuning')\n            .then(function (res) {\n                setBrands(res.data)\n            })\n        instance\n            .get('/languages/chiptuning')\n            .then(function (res) {\n                setLang(res.data)\n            })\n        instance\n            .get('/config')\n            .then(function (res) {\n                setConfig(res.data)\n            })\n    }, [])\n    useEffect(() => {\n        if (url) {\n            const urlExp = url.split(\"/\")\n            const urlCount = urlExp.length\n            if (urlCount == 1 && brands.length < 1) {\n                const id = idSelector(urlExp[0]).replace('#', '')\n                getModelFunc(id)\n            } else if (urlCount == 2 && models.length < 1) {\n                getModelFunc(idSelector(urlExp[0]).replace('#', ''))\n                getYearFunc(idSelector(urlExp[1]))\n            } else if ((urlCount == 3 && years.length < 1)) {\n                getModelFunc(idSelector(urlExp[0]).replace('#', ''))\n                getYearFunc(idSelector(urlExp[1]))\n                getEngineFunc(idSelector(urlExp[2]))\n            } else if ((urlCount == 4 && engines.length < 1)) {\n                getModelFunc(idSelector(urlExp[0]).replace('#', ''))\n                getYearFunc(idSelector(urlExp[1]))\n                getEngineFunc(idSelector(urlExp[2]))\n                getStageFunc(idSelector(urlExp[3]))\n            }\n        }\n\n    }, [brands])\n\n    const getModelFunc = (id, urlConf = false) => {\n        try {\n            const brandData = brands.find(data => data.id == id)\n            setBrand(brandData)\n            setBrandId(id)\n            setModelId(undefined)\n            setYearId(undefined)\n            setEngineId(undefined)\n            setStageId(undefined)\n            setModels([])\n            setYears([])\n            setEngines([])\n            setStages([])\n            instance\n                .get(`/tuning/models/${id}`)\n                .then(function (res) {\n                    setModels(res.data)\n                    setTitle(res.data[0].parent.var_title + \" | Chip Tuning\")\n                })\n                .then(\n                    function () {\n                        if (urlConf) {\n                            setUrl(brandData.seo_url)\n                        }\n                    }\n                )\n        } catch (e) {\n\n        }\n\n    }\n    const getYearFunc = (id, urlConf = false) => {\n        try {\n            const modelData = models.find(data => data.id == id)\n            setModel(modelData)\n            setModelId(id)\n            setYearId(undefined)\n            setEngineId(undefined)\n            setStageId(undefined)\n            setYears([])\n            setEngines([])\n            setStages([])\n            instance\n                .get(`/tuning/years/${id}`)\n                .then(function (res) {\n                    setYears(res.data)\n                    setTitle(res.data[0].parent.seo_title + \" | Chip Tuning\")\n\n                })\n                .then(\n                    function () {\n                        if (urlConf) {\n                            setUrl(modelData.seo_url)\n                        }\n                    })\n        } catch (e) {\n\n        }\n    }\n    const getEngineFunc = (id, urlConf = false) => {\n        try {\n            const yearData = years.find(data => data.id == id)\n            setYear(yearData)\n            setYearId(id)\n            setEngineId(undefined)\n            setStageId(undefined)\n            setEngines([])\n            setStages([])\n            instance\n                .get(`/tuning/engines/${id}`)\n                .then(function (res) {\n                    setEngines(res.data)\n                    setTitle(res.data[0].parent.seo_title + \" | Chip Tuning\")\n                }).then(\n                function () {\n                    if (urlConf) {\n                        setUrl(yearData.seo_url)\n                    }\n                })\n\n        } catch (e) {\n\n        }\n    }\n\n    function getStageFunc(id, urlConf = false) {\n        try {\n            const engineData = engines.find(data => data.id == id)\n            setEngine(engineData)\n            setEngineId(id)\n            setStageId(undefined)\n            setStages([])\n            instance\n                .get(`/tuning/bulk/option`)\n                .then(result => {\n                    if (result.data) {\n                        if (result.data[1]) {\n                            setPriceSet(result.data[1])\n                        }\n                        if (result.data[2]) {\n                            setHpSet(result.data[2])\n                        }\n                        if (result.data[3]) {\n                            setNmSet(result.data[3])\n                        }\n                    }\n                });\n            instance\n                .get(`/tuning/stages/${id}`)\n                .then(function (res) {\n                        setStages(res.data);\n                        setTitle(res.data[0].parent.seo_title + \" | Chip Tuning\")\n                        if (res.data[1]) {\n                            setStage(res.data[1]);\n                            setStageId(res.data[1].id);\n                        } else {\n                            setStage(res.data[0]);\n                            setStageId(res.data[0].id);\n                        }\n                    }\n                ).then(\n                function () {\n                    if (urlConf) {\n                        setUrl(engineData.seo_url)\n                    }\n                })\n        } catch (e) {\n\n        }\n    }\n\n    const getModels = (event) => {\n        const id = event.target.value\n        getModelFunc(id, true)\n    }\n    const getYears = (event) => {\n        const id = event.target.value\n        getYearFunc(id, true)\n    }\n    const getEngines = (event) => {\n        const id = event.target.value\n        getEngineFunc(id, true)\n    }\n    const getStages = (event) => {\n        const id = event.target.value\n        getStageFunc(id, true)\n    }\n    const Logo = ({logo}) => {\n        return (\n            <img width={60} src={`https://api.carecusoft.com/userfiles/${logo}`}/>\n        )\n    }\n    const BrandInfo = () => {\n        if (stageId) {\n            const brand = stage.parent.parent.parent.parent;\n            const engine = stage.parent;\n            return (\n                <div style={{height: 88}} className=\"acr-2 acr-border acr-radius acr-p-10 acr-m-10 cst-2-standart acr-shadow\">\n                    <div className=\"acr-s-div\">\n                        <div className=\"acr-s-1\">\n                            <Logo logo={brand.my_data != null ? brand.my_data.logo : brand.var_logo_big}/>\n                        </div>\n                        <div className=\"acr-s-3 acr-m-4\">\n                            <div className=\"acr-h18\">\n                                <b>Standart</b>\n                                <br/>\n                            </div>\n                            <div className=\"acr-s-div\">\n                                <div className=\"acr-s-1 acr-h16\">\n                                    <b>{engine.my_data != null ? engine.my_data.hp : engine.int_hp}</b> <span className=\"acr-h12\">hp</span>\n\n                                </div>\n                                <div className=\"acr-s-1 acr-h16\">\n                                    <b>{engine.my_data != null ? engine.my_data.nm : engine.int_nm}</b> <span className=\"acr-h12\">nm</span>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return <></>\n        }\n\n    }\n    const dataFunc = (func, rate, data) => {\n        data = Number(data);\n        rate = Number(rate);\n        switch (func) {\n            case \"*\":\n                return data * rate;\n                break\n            case \"+\":\n                return data + rate;\n                break\n            case \"-\":\n                return data - rate;\n                break\n            case \"/\":\n                if (rate == 0) {\n                    return data;\n                }\n                return data / rate;\n                break\n        }\n    }\n    const NmStage = (getData) => {\n        const nmPer = getData.nmPer\n        const newNm = dataFunc(nmSet.func, nmPer, getData.data.int_nm_new);\n        const nmDiff = newNm - getData.data.parent.int_nm;\n        return (\n            <div className=\"acr-s-1 acr-h16\">\n                <b>{getData.data.my_data != null ? getData.data.my_data.nm : newNm}</b> <span className=\"acr-h14\">nm</span>\n                <div className=\"acr-both\"></div>\n                <span className=\"acr-h16 cst-2-diff\"><b>+{getData.data.my_data != null ? getData.data.my_data.nm_diff : nmDiff}</b> <span className=\"acr-h12\">nm</span></span>\n            </div>\n        )\n    }\n    const Stage = ({data}) => {\n        let pricePer = 1;\n        let nmPer = 1;\n        let hpPer = 1;\n        switch (data.stage_type) {\n            case 0:\n                pricePer = priceSet.s0\n                hpPer = hpSet.s0\n                nmPer = nmSet.s0\n                break\n            case 1:\n                pricePer = priceSet.s1\n                hpPer = hpSet.s1\n                nmPer = nmSet.s1\n                break\n            case 2:\n                pricePer = priceSet.s2\n                hpPer = hpSet.s2\n                nmPer = nmSet.s2\n                break\n            case 3:\n                pricePer = priceSet.s3\n                hpPer = hpSet.s3\n                nmPer = nmSet.s3\n                break\n            case 4:\n                pricePer = priceSet.s4\n                hpPer = hpSet.s4\n                nmPer = nmSet.s4\n                break\n            case 5:\n                pricePer = priceSet.s5\n                hpPer = hpSet.s5\n                nmPer = nmSet.s5\n                break\n            default:\n                pricePer = 1;\n                hpPer = 1\n                nmPer = 1\n        }\n        if (data.stage_type == 0) {\n            return (\n                <></>\n                /* <div key={data.id} id={data.id} className={`acr-2 acr-border acr-radius acr-p-10 acr-m-10 cst-2-tuning-${data.stage_type} acr-shadow`}>\n                     <div className=\"acr-s-div\" style={{position: 'relative'}}>\n                         <div className=\"acr-s-1 acr-m-4 \">\n                             <div className=\"acr-h18\">\n                                 <b>{data.my_data != null ? data.my_data.name : data.var_title}</b>\n                             </div>\n                             <NmStage data={data}/>\n                         </div>\n                         <div className=\"acr-s-1 acr-h16\">\n                             <span style={{color: '#7FB800'}} className=\" cst-2-diff\"><b>-{data.my_data != null ? data.my_data.eco : data.int_eco}</b> <span className=\"acr-h12\">FUEL</span></span>\n                         </div>\n                         <div className=\"cst-2-price\">{\n                             data.my_data != null ? data.my_data.eco :\n                                 config.currency != -1 ? `${data.price * pricePer} ${config.currency}` : ''\n                         }\n\n                         </div>\n                     </div>\n                 </div>*/\n            )\n        } else {\n            const Fuel = () => {\n                if (data.stage_type == 1) {\n                    return (\n                        <div className=\"acr-s-1 acr-h16\">\n                                <span style={{color: '#7FB800'}} className=\" cst-2-diff\">\n                                    <b>-{data.my_data != null ? data.my_data.eco : data.int_eco}</b>\n                                    <span className=\"acr-h12\"> FUEL</span>\n                                </span>\n                        </div>\n                    )\n                } else {\n                    return <></>\n                }\n            }\n            const newHp = dataFunc(hpSet.func, hpPer, data.int_hp_new);\n            const newPrice = dataFunc(priceSet.func, pricePer, data.price);\n            const hpDiff = newHp - data.parent.int_hp;\n            return (\n                <div key={data.id} id={data.id} className={`acr-2 acr-border acr-radius acr-p-10 acr-m-10 cst-2-tuning-${data.stage_type} acr-shadow`}>\n                    <div className=\"acr-s-div\" style={{position: 'relative'}}>\n                        <div className=\"acr-s-1 acr-m-4\">\n                            <div className=\"acr-s-div\">\n                                <div className=\"acr-s-1\">\n                                    <div className=\"acr-h18\">\n                                        <b>{data.my_data != null ? data.my_data.name : data.var_title}</b>\n                                        <br/>\n                                    </div>\n                                </div>\n                                <Fuel/>\n                            </div>\n                            <div className=\"acr-s-div\">\n                                <div className=\"acr-s-1 acr-h16\">\n                                    <b>{data.my_data != null ? data.my_data.hp : newHp}</b> <span className=\"acr-h12\">hp</span>\n                                    <div className=\"acr-both\"></div>\n                                    <span className=\"cst-2-diff\"><b>+{data.my_data != null ? data.my_data.hp_diff : hpDiff}</b> <span className=\"acr-h12\">hp</span></span>\n                                </div>\n                                <NmStage data={data} nmPer={nmPer}/>\n                            </div>\n                        </div>\n                        <div className=\"cst-2-price\">\n                            {\n                                data.my_data != null ?\n                                    `${data.my_data.price}  ${config.currency}` :\n                                    config.currency != undefined && config.currency != -1 ?\n                                        `${newPrice} ${config.currency}`\n                                        : ''\n                            }\n\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n\n    }\n    const StagesView = () => {\n        return stages.map((data) => (\n            <Stage key={data.id} data={data}/>\n        ))\n    }\n    return (\n        <div>\n            <div className=\"acr-div acr-shadow acr-p-10 acr-radius\">\n                <div className=\"acr-1 acr-m-10 carecut-2\">\n                    {lang.brands}\n                    <Select datas={brands} id={brandId} handleChange={getModels}/>\n                </div>\n                <div className=\"acr-1  acr-m-10 carecut-2\">\n                    {lang.models}\n                    <Select datas={models} id={modelId} handleChange={getYears}/>\n                </div>\n                <div className=\"acr-1  acr-m-10 carecut-2\">\n                    {lang.years}\n                    <Select datas={years} id={yearId} handleChange={getEngines}/>\n                </div>\n                <div className=\"acr-1  acr-m-10 carecut-2\">\n                    {lang.engines}\n                    <Select datas={engines} id={engineId} engine={1} handleChange={getStages}/>\n                </div>\n            </div>\n            <div className=\"acr-div \" style={{marginTop: 30}}>\n                <BrandInfo/>\n                <StagesView/>\n            </div>\n            <ChartView stages={stages}/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './acr.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n    google: {\n        families: ['Karla:300,400,700', 'sans-serif']\n    }\n});\nReactDOM.render(<App/>, document.getElementById('carecut-2'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}