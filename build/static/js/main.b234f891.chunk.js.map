{"version":3,"sources":["pages/Select.js","apis.js","ChartView.js","App.js","serviceWorker.js","index.js"],"names":["Select","_ref","datas","handleChange","id","engine","react_default","a","createElement","className","onChange","value","map","data","key","my_data","name","hp","var_title","int_hp","e","Fragment","langCode","navigator","language","userLanguage","split","apiKey","document","querySelector","getAttribute","instance","axios","create","baseURL","concat","params","ChartView","stages","ft_type","rpmList","length","parent","rpm_values","hp_percentage","nm_percentage","rpmExp","ftHpExp","ftNmExp","nm","int_fuel_type","rpmData","stageValue","rpmStage","s_ecod","sd_1","sd_2","sd_3","sd_4","sd_5","s_econ","sn_1","sn_2","sn_3","sn_4","sn_5","rpml","stage","int_nm_new","hp_org","int_hp_new","stage_type","push","ECO_HP","S_1_HP","S_2_HP","S_3_HP","S_4_HP","S_5_HP","ECO_NM","S_1_NM","S_2_NM","S_3_NM","S_4_NM","S_5_NM","rpm","flat","filter","x","i","indexOf","dv","DataSet","createView","source","transform","type","fields","BizCharts","height","scale","range","forceFit","label","formatter","val","crosshairs","position","size","color","shape","style","stroke","lineWidth","App","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","brands","setBrands","_useState5","s0","s1","s2","s3","s4","s5","_useState6","priceSet","setPriceSet","_useState7","_useState8","models","setModels","_useState9","_useState10","years","setYears","_useState11","_useState12","engines","setEngines","_useState13","_useState14","setStages","_useState15","window","location","hash","_useState16","url","setUrl","_useState17","_useState18","title","setTitle","_useState19","_useState20","setBrand","_useState21","_useState22","setModel","_useState23","_useState24","setYear","_useState25","_useState26","setEngine","_useState27","_useState28","setStage","_useState29","undefined","_useState30","brandId","setBrandId","_useState31","_useState32","modelId","setModelId","_useState33","_useState34","yearId","setYearId","_useState35","_useState36","engineId","setEngineId","_useState37","_useState38","stageId","setStageId","idSelector","str","useEffect","get","then","res","urlExp","urlCount","replace","getModelFunc","getYearFunc","getEngineFunc","getStageFunc","urlConf","arguments","brandData","find","seo_url","modelData","seo_title","yearData","engineData","result","Logo","logo","width","src","NmStage","_ref2","nm_diff","int_nm_diff","EcoStage","_ref3","pricePer","eco","int_eco","price","hp_diff","int_hp_diff","pages_Select","event","target","marginTop","brand","var_logo_big","int_nm","src_ChartView","Boolean","hostname","match","WebFont","load","google","families","ReactDOM","render","src_App","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b234f891.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Select = ({datas, handleChange, id, engine}) => {\r\n    const Option = () => {\r\n\r\n        try {\r\n            if (engine === 1) {\r\n                return datas.map((data) => (\r\n                    <option key={data.id} value={data.id}>{data.my_data != null ? data.my_data.name + ' ' + data.my_data.hp : data.var_title + ' ' + data.int_hp}Hp</option>\r\n                ));\r\n            } else {\r\n                return datas.map((data) => (\r\n                    <option key={data.id} value={data.id}>{data.my_data != null ? data.my_data.name : data.var_title}</option>\r\n                ));\r\n            }\r\n        } catch (e) {\r\n            return <></>\r\n        }\r\n    }\r\n    return (\r\n        <select className={'acr-select'} onChange={handleChange} value={id}>\r\n            <option value={''}>Select</option>\r\n            <Option/>\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default Select;","import axios from 'axios';\r\n\r\nconst userLang = navigator.language || navigator.userLanguage;\r\nconst langCode = userLang.split('-');\r\nconst apiKey = document.querySelector(\"meta[name='cst-api-key']\").getAttribute('content');\r\nconst instance = axios.create({\r\n    baseURL: `https://api.carecusoft.com/${langCode[0]}/v1/`,\r\n    params: {\r\n        key: apiKey\r\n    }\r\n});\r\nexport default instance","import React from \"react\";\r\nimport {Chart, Axis, Geom, Tooltip, Legend} from \"bizcharts\";\r\nimport DataSet from '@antv/data-set';\r\n\r\nconst ChartView = ({stages}) => {\r\n    let ft_type = 'petrol';\r\n    let rpmList = [\"0\", \"1000\", \"2000\", \"3000\", \"4000\", \"5000\", \"6000\", \"7000\", \"8000\"];\r\n    if (stages.length > 0) {\r\n        try {\r\n            const engine = stages[0].parent;\r\n            if (engine.rpm_values) {\r\n                const hp_percentage = engine.my_data !=null ? engine.my_data.hp_percentage : engine.hp_percentage\r\n                const nm_percentage = engine.my_data !=null ? engine.my_data.nm_percentage : engine.nm_percentage\r\n                const rpmExp = engine.rpm_values.split(',')\r\n                const ftHpExp = hp_percentage.split(',')\r\n                const ftNmExp = nm_percentage.split(',')\r\n\r\n                rpmList = rpmExp;\r\n                ft_type = {hp: ftHpExp, nm: ftNmExp}\r\n            } else {\r\n                switch (engine.int_fuel_type) {\r\n                    case 0:\r\n                        rpmList = [\"0\", \"1000\", \"2000\", \"3000\", \"4000\", \"5000\", \"6000\", \"7000\", \"8000\"];\r\n                        ft_type = {hp: [0, 7, 25, 43, 57, 73, 90, 100, 0], nm: [0, 46, 79, 91, 91, 95, 100, 90, 0]}\r\n                        break\r\n                    case 1:\r\n                        ft_type = {hp: [0, 7, 25, 43, 57, 73, 90, 100, 0], nm: [0, 46, 79, 91, 91, 95, 100, 90, 0]}\r\n                        rpmList = [\"0\", \"1000\", \"2000\", \"3000\", \"4000\", \"5000\", \"6000\", \"7000\", \"8000\"];\r\n                        break\r\n                    case 2:\r\n                        ft_type = {hp: [0, 16, 45, 63, 80, 90, 97, 100, 90, 0], nm: [0, 50, 90, 99, 100, 95, 85, 79, 67, 0]}\r\n                        rpmList = [\"0\", \"1000\", \"1500\", \"2000\", \"2500\", \"3000\", \"3500\", \"4000\", \"4500\", \"5000\"];\r\n                        break\r\n                }\r\n            }\r\n\r\n            let rpmData = [];\r\n            let stageValue = []\r\n            let rpmStage = [];\r\n            let s_ecod = []\r\n            let sd_1 = []\r\n            let sd_2 = []\r\n            let sd_3 = []\r\n            let sd_4 = []\r\n            let sd_5 = []\r\n            let s_econ = []\r\n            let sn_1 = []\r\n            let sn_2 = []\r\n            let sn_3 = []\r\n            let sn_4 = []\r\n            let sn_5 = []\r\n\r\n            rpmList.map((rpml, key) => {\r\n                stages.map((stage) => {\r\n                    const nm = stage.my_data !=null ? stage.my_data.nm : stage.int_nm_new;\r\n                    const hp_org = engine.my_data !=null ? engine.my_data.hp : engine.int_hp;\r\n                    const hp = stage.my_data !=null ? stage.my_data.hp : stage.int_hp_new;\r\n\r\n                    switch (stage.stage_type) {\r\n                        case 0:\r\n                            stageValue.push([\r\n                                'ECO_HP', 'ECO_NM'\r\n                            ])\r\n                            s_ecod.push(ft_type.hp[key] * hp_org / 100)\r\n                            s_econ.push(ft_type.nm[key] * nm / 100)\r\n\r\n                            break\r\n                        case 1:\r\n                            stageValue.push([\r\n                                'S_1_HP', 'S_1_NM'\r\n                            ])\r\n                            sd_1.push(ft_type.hp[key] * hp / 100)\r\n                            sn_1.push(ft_type.nm[key] * nm / 100)\r\n                            break\r\n                        case 2:\r\n                            stageValue.push([\r\n                                'S_2_HP', 'S_2_NM'\r\n                            ])\r\n                            sd_2.push(ft_type.hp[key] * hp / 100)\r\n                            sn_2.push(ft_type.nm[key] * nm / 100)\r\n                            break\r\n                        case 3:\r\n                            stageValue.push([\r\n                                'S_3_HP', 'S_3_NM'\r\n                            ])\r\n                            sd_3.push(ft_type.hp[key] * hp / 100)\r\n                            sn_3.push(ft_type.nm[key] * nm / 100)\r\n                            break\r\n                        case 4:\r\n                            stageValue.push([\r\n                                'S_4_HP', 'S_4_NM'\r\n                            ])\r\n                            sd_4.push(ft_type.hp[key] * hp / 100)\r\n                            sn_4.push(ft_type.nm[key] * nm / 100)\r\n                            break\r\n                        case 5:\r\n                            stageValue.push([\r\n                                'S_5_HP', 'S_5_NM'\r\n                            ])\r\n                            sd_5.push(ft_type.hp[key] * hp / 100)\r\n                            sn_5.push(ft_type.nm[key] * nm / 100)\r\n                            break\r\n                    }\r\n                })\r\n                rpmStage = {\r\n                    ECO_HP: s_ecod[key],\r\n                    S_1_HP: sd_1[key],\r\n                    S_2_HP: sd_2[key],\r\n                    S_3_HP: sd_3[key],\r\n                    S_4_HP: sd_4[key],\r\n                    S_5_HP: sd_5[key],\r\n                    ECO_NM: s_econ[key],\r\n                    S_1_NM: sn_1[key],\r\n                    S_2_NM: sn_2[key],\r\n                    S_3_NM: sn_3[key],\r\n                    S_4_NM: sn_4[key],\r\n                    S_5_NM: sn_5[key]\r\n                }\r\n                rpmData.push({\r\n                        rpm: rpml,\r\n                        ECO_HP: rpmStage.ECO_HP,\r\n                        ECO_NM: rpmStage.ECO_NM,\r\n                        S_1_HP: rpmStage.S_1_HP,\r\n                        S_1_NM: rpmStage.S_1_NM,\r\n                        S_2_HP: rpmStage.S_2_HP,\r\n                        S_2_NM: rpmStage.S_2_NM,\r\n                        S_3_HP: rpmStage.S_3_HP,\r\n                        S_3_NM: rpmStage.S_3_NM,\r\n                        S_4_HP: rpmStage.S_4_HP,\r\n                        S_4_NM: rpmStage.S_4_NM,\r\n                        S_5_HP: rpmStage.S_5_HP,\r\n                        S_5_NM: rpmStage.S_5_NM,\r\n\r\n                    }\r\n                )\r\n            })\r\n            stageValue = stageValue.flat()\r\n            stageValue = stageValue.filter((x, i, a) => a.indexOf(x) == i)\r\n            const ds = new DataSet();\r\n            const dv = ds.createView().source(rpmData);\r\n            dv.transform({\r\n                type: 'fold',\r\n                fields: stageValue, // 展开字段集\r\n                key: 'city', // key字段\r\n                value: 'hp', // value字段\r\n            });\r\n            const cols = {\r\n                rpm: {\r\n                    range: [0, 1]\r\n                }\r\n            }\r\n            return (\r\n                <Chart height={400} data={dv} scale={cols} forceFit>\r\n                    <Legend/>\r\n                    <Axis name=\"rpm\"/>\r\n                    <Axis name=\"hp\" label={{formatter: val => `${val}`}}/>\r\n                    <Tooltip crosshairs={{type: \"y\"}}/>\r\n                    <Geom type=\"line\" position=\"rpm*hp\" size={2} color={'city'}/>\r\n                    <Geom type='point' position=\"rpm*hp\" size={4} shape={'circle'} color={'city'} style={{stroke: '#fff', lineWidth: 1}}/>\r\n\r\n                </Chart>\r\n            )\r\n        } catch (e) {\r\n\r\n            return <></>\r\n        }\r\n    } else {\r\n        return <></>\r\n    }\r\n\r\n}\r\n\r\nexport default ChartView;\r\n","import React, {useEffect, useState} from 'react';\nimport Select from './pages/Select';\nimport instance from './apis';\nimport ChartView from './ChartView';\n\n\nconst App = () => {\n    const [status, setStatus] = useState(false);\n    const [brands, setBrands] = useState([]);\n    const [priceSet, setPriceSet] = useState({s0: 1, s1: 1, s2: 1, s3: 1, s4: 1, s5: 1});\n    const [models, setModels] = useState([]);\n    const [years, setYears] = useState([]);\n    const [engines, setEngines] = useState([]);\n    const [stages, setStages] = useState([]);\n    const [url, setUrl] = useState(window.location.hash)\n    const [title, setTitle] = useState('Chip Tuning')\n\n    const [brand, setBrand] = useState([]);\n    const [model, setModel] = useState([]);\n    const [year, setYear] = useState([]);\n    const [engine, setEngine] = useState([]);\n    const [stage, setStage] = useState([]);\n\n    const [brandId, setBrandId] = useState(undefined);\n    const [modelId, setModelId] = useState(undefined);\n    const [yearId, setYearId] = useState(undefined);\n    const [engineId, setEngineId] = useState(undefined);\n    const [stageId, setStageId] = useState(undefined);\n\n    function idSelector(str) {\n        return str.split(\"-\")[0]\n    }\n\n    window.location.hash = url;\n    document.title = title;\n    useEffect(() => {\n        instance\n            .get('/chiptuning')\n            .then(function (res) {\n                setBrands(res.data)\n            })\n\n    }, [])\n    useEffect(() => {\n        if (url) {\n            const urlExp = url.split(\"/\")\n            const urlCount = urlExp.length\n            if (urlCount == 1 && brands.length < 1) {\n                const id = idSelector(urlExp[0]).replace('#', '')\n                getModelFunc(id)\n            } else if (urlCount == 2 && models.length < 1) {\n                getModelFunc(idSelector(urlExp[0]).replace('#', ''))\n                getYearFunc(idSelector(urlExp[1]))\n            } else if ((urlCount == 3 && years.length < 1)) {\n                getModelFunc(idSelector(urlExp[0]).replace('#', ''))\n                getYearFunc(idSelector(urlExp[1]))\n                getEngineFunc(idSelector(urlExp[2]))\n            } else if ((urlCount == 4 && engines.length < 1)) {\n                getModelFunc(idSelector(urlExp[0]).replace('#', ''))\n                getYearFunc(idSelector(urlExp[1]))\n                getEngineFunc(idSelector(urlExp[2]))\n                getStageFunc(idSelector(urlExp[3]))\n            }\n        }\n    }, [brands])\n\n    const getModelFunc = (id, urlConf = false) => {\n        try {\n            const brandData = brands.find(data => data.id == id)\n            setBrand(brandData)\n            setBrandId(id)\n            setModelId(undefined)\n            setYearId(undefined)\n            setEngineId(undefined)\n            setStageId(undefined)\n            setModels([])\n            setYears([])\n            setEngines([])\n            setStages([])\n            instance\n                .get(`/tuning/models/${id}`)\n                .then(function (res) {\n                    setModels(res.data)\n                    setTitle(res.data[0].parent.var_title + \" | Chip Tuning\")\n                })\n                .then(\n                    function () {\n                        if (urlConf) {\n                            setUrl(brandData.seo_url)\n                        }\n\n                    }\n                )\n        } catch (e) {\n\n        }\n\n    }\n    const getYearFunc = (id, urlConf = false) => {\n        try {\n            const modelData = models.find(data => data.id == id)\n            setModel(modelData)\n            setModelId(id)\n            setYearId(undefined)\n            setEngineId(undefined)\n            setStageId(undefined)\n            setYears([])\n            setEngines([])\n            setStages([])\n            instance\n                .get(`/tuning/years/${id}`)\n                .then(function (res) {\n                    setYears(res.data)\n                    setTitle(res.data[0].parent.seo_title + \" | Chip Tuning\")\n\n                })\n                .then(\n                    function () {\n                        if (urlConf) {\n                            setUrl(modelData.seo_url)\n                        }\n\n                    })\n        } catch (e) {\n\n        }\n    }\n    const getEngineFunc = (id, urlConf = false) => {\n        try {\n            const yearData = years.find(data => data.id == id)\n            setYear(yearData)\n            setYearId(id)\n            setEngineId(undefined)\n            setStageId(undefined)\n            setEngines([])\n            setStages([])\n            instance\n                .get(`/tuning/engines/${id}`)\n                .then(function (res) {\n                    setEngines(res.data)\n                    setTitle(res.data[0].parent.seo_title + \" | Chip Tuning\")\n                }).then(\n                function () {\n                    if (urlConf) {\n                        setUrl(yearData.seo_url)\n                    }\n                })\n\n        } catch (e) {\n\n        }\n    }\n\n    function getStageFunc(id, urlConf = false) {\n        try {\n            const engineData = engines.find(data => data.id == id)\n            setEngine(engineData)\n            setEngineId(id)\n            setStageId(undefined)\n            setStages([])\n            instance\n                .get(`/tuning/setPrice`)\n                .then(result => {\n                    if (result.data) {\n                        setPriceSet(result.data)\n                    }\n                });\n            instance\n                .get(`/tuning/stages/${id}`)\n                .then(function (res) {\n                        setStages(res.data);\n                        setTitle(res.data[0].parent.seo_title + \" | Chip Tuning\")\n                        if (res.data[1]) {\n                            setStage(res.data[1]);\n                            setStageId(res.data[1].id);\n                        } else {\n                            setStage(res.data[0]);\n                            setStageId(res.data[0].id);\n                        }\n                    }\n                ).then(\n                function () {\n                    if (urlConf) {\n                        setUrl(engineData.seo_url)\n                    }\n                })\n        } catch (e) {\n\n        }\n    }\n\n    const getModels = (event) => {\n        const id = event.target.value\n        getModelFunc(id, true)\n    }\n    const getYears = (event) => {\n        const id = event.target.value\n        getYearFunc(id, true)\n    }\n    const getEngines = (event) => {\n        const id = event.target.value\n        getEngineFunc(id, true)\n    }\n    const getStages = (event) => {\n        const id = event.target.value\n        getStageFunc(id, true)\n    }\n    const Logo = ({logo}) => {\n        return (\n            <img width={60} src={`https://api.carecusoft.com/userfiles/${logo}`}/>\n        )\n    }\n    const BrandInfo = () => {\n        if (stageId) {\n            const brand = stage.parent.parent.parent.parent;\n            const engine = stage.parent;\n            return (\n                <div style={{height: 88}} className=\"acr-2 acr-border acr-radius acr-p-10 acr-m-10 cst-2-standart acr-shadow\">\n                    <div className=\"acr-s-div\">\n                        <div className=\"acr-s-1\">\n                            <Logo logo={brand.my_data !=null ? brand.my_data.logo : brand.var_logo_big}/>\n                        </div>\n                        <div className=\"acr-s-3 acr-m-4\">\n                            <div className=\"acr-h18\">\n                                <b>Standart</b>\n                                <br/>\n                            </div>\n                            <div className=\"acr-s-div\">\n                                <div className=\"acr-s-1 acr-h16\">\n                                    <b>{engine.my_data !=null ? engine.my_data.hp : engine.int_hp}</b> <span className=\"acr-h12\">hp</span>\n\n                                </div>\n                                <div className=\"acr-s-1 acr-h16\">\n                                    <b>{engine.my_data !=null ? engine.my_data.nm : engine.int_nm}</b> <span className=\"acr-h12\">nm</span>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        } else {\n            return <></>\n        }\n\n    }\n    const NmStage = ({data}) => {\n        return (\n            <div className=\"acr-s-1 acr-h16\">\n                <b>{data.my_data !=null ? data.my_data.nm : data.int_nm_new}</b> <span className=\"acr-h14\">nm</span>\n                <div className=\"acr-both\"></div>\n                <span className=\"acr-h16 cst-2-diff\"><b>+{data.my_data !=null ? data.my_data.nm_diff : data.int_nm_diff}</b> <span className=\"acr-h12\">nm</span></span>\n            </div>\n        )\n    }\n    const EcoStage = ({data}) => {\n        let pricePer = 1;\n        switch (data.stage_type) {\n            case 0:\n                pricePer = priceSet.s0\n                break\n            case 1:\n                pricePer = priceSet.s1\n                break\n            case 2:\n                pricePer = priceSet.s2\n                break\n            case 3:\n                pricePer = priceSet.s3\n                break\n            case 4:\n                pricePer = priceSet.s4\n                break\n            case 5:\n                pricePer = priceSet.s5\n                break\n            default:\n                pricePer = 1;\n        }\n        if (data.stage_type == 0) {\n            return (\n                <div key={data.id} id={data.id} className={`acr-2 acr-border acr-radius acr-p-10 acr-m-10 cst-2-tuning-${data.stage_type} acr-shadow`}>\n                    <div className=\"acr-s-div\" style={{position: 'relative'}}>\n                        <div className=\"acr-s-1 acr-m-4 \">\n                            <div className=\"acr-h18\">\n                                <b>{data.my_data !=null ? data.my_data.name : data.var_title}</b>\n                            </div>\n                            <NmStage data={data}/>\n                        </div>\n                        <div className=\"acr-s-1 acr-h16\">\n                            <span style={{color: '#7FB800'}} className=\" cst-2-diff\"><b>-{data.my_data !=null ? data.my_data.eco : data.int_eco}</b> <span className=\"acr-h12\">FUEL</span></span>\n                        </div>\n                        <div className=\"cst-2-price\">{data.my_data !=null ? data.my_data.eco : data.price * pricePer}€</div>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div key={data.id} id={data.id} className={`acr-2 acr-border acr-radius acr-p-10 acr-m-10 cst-2-tuning-${data.stage_type} acr-shadow`}>\n                    <div className=\"acr-s-div\" style={{position: 'relative'}}>\n                        <div className=\"acr-s-1 acr-m-4\">\n                            <div className=\"acr-h18\">\n                                <b>{data.my_data !=null ? data.my_data.name : data.var_title}</b>\n                                <br/>\n                            </div>\n                            <div className=\"acr-s-div\">\n                                <div className=\"acr-s-1 acr-h16\">\n                                    <b>{data.my_data !=null ? data.my_data.hp : data.int_hp_new}</b> <span className=\"acr-h12\">hp</span>\n                                    <div className=\"acr-both\"></div>\n                                    <span className=\"cst-2-diff\"><b>+{data.my_data !=null ? data.my_data.hp_diff : data.int_hp_diff}</b> <span className=\"acr-h12\">hp</span></span>\n                                </div>\n                                <NmStage data={data}/>\n                            </div>\n                        </div>\n                        <div className=\"cst-2-price\">{data.my_data !=null ? data.my_data.price : data.price * pricePer}€</div>\n                    </div>\n                </div>\n            )\n\n        }\n\n    }\n    const StagesView = () => {\n        return stages.map((data) => (\n            <EcoStage key={data.id} data={data}/>\n        ))\n    }\n\n\n    return (\n        <div>\n            <div className=\"acr-div acr-shadow acr-p-10 acr-radius\">\n                <div className=\"acr-1 acr-m-10 carecut-2\">\n                    Brands\n                    <Select datas={brands} id={brandId} handleChange={getModels}/>\n                </div>\n                <div className=\"acr-1  acr-m-10 carecut-2\">\n                    Models\n                    <Select datas={models} id={modelId} handleChange={getYears}/>\n                </div>\n                <div className=\"acr-1  acr-m-10 carecut-2\">\n                    Years\n                    <Select datas={years} id={yearId} handleChange={getEngines}/>\n                </div>\n                <div className=\"acr-1  acr-m-10 carecut-2\">\n                    Engines\n                    <Select datas={engines} id={engineId} engine={1} handleChange={getStages}/>\n                </div>\n            </div>\n            <div className=\"acr-div \" style={{marginTop: 30}}>\n                <BrandInfo/>\n                <StagesView/>\n            </div>\n            <ChartView stages={stages}/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './acr.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport WebFont from 'webfontloader';\n\nWebFont.load({\n    google: {\n        families: ['Karla:300,400,700', 'sans-serif']\n    }\n});\nReactDOM.render(<App/>, document.getElementById('carecut-2'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}